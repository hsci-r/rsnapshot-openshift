apiVersion: v1
kind: Template
metadata:
  name: backup-cronjob
  annotations:
    description: "rsnapshot backup cronjob"
parameters:
  - name: APP_NAME
    description: "App/deploymentconfig name"
    value: webanno
  - name: BACKUP_VOLUME
    description: "Backup volume to use"
    value: backup
  - name: DATA_VOLUME
    description: "Data volume to backup"
    value: webanno-files
  - name: BACKUP_ROTATION
    description: "Name for rotation"
    value: daily
  - name: BACKUP_RETAIN
    description: "How many old entries to retain for this rotation"
    value: "3"
  - name: BACKUP_SCHEDULE
    description: 'Cron schedule. Format "minute hour day month weekday"'
    value: "10 * * * *"
objects:
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      labels:
        app: ${APP_NAME}
        backup: ${APP_NAME}
      name: ${APP_NAME}-backup-${BACKUP_ROTATION}-cronjob
    spec:
      concurrencyPolicy: Forbid
      schedule: ${BACKUP_SCHEDULE}
      jobTemplate:
        spec:
          template:
            metadata:
              labels:
                app: ${APP_NAME}
                backup: ${APP_NAME}
                parent: ${APP_NAME}-backup-${BACKUP_ROTATION}
            spec:
              affinity:
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                          - key: deploymentconfig
                            operator: In
                            values:
                              - ${APP_NAME}
                      topologyKey: kubernetes.io/hostname
              containers:
                - env:
                    - name: BACKUP_NAME
                      value: ${BACKUP_NAME}
                    - name: BACKUP_RETAIN
                      value: ${BACKUP_RETAIN}
                    - name: BACKUP_ROTATION
                      value: ${BACKUP_ROTATION}
                  image: "docker.io/hsci/rsnapshot-openshift:latest"
                  imagePullPolicy: Always
                  name: rsnapshot
                  volumeMounts:
                    - mountPath: /data/
                      name: data
                      readOnly: true
                    - mountPath: /backup/
                      name: backup
              restartPolicy: OnFailure
              volumes:
                - name: data
                  persistentVolumeClaim:
                    claimName: ${DATA_VOLUME}
                - name: backup
                  persistentVolumeClaim:
                    claimName: ${BACKUP_VOLUME}
